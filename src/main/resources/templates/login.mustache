{{>layouts/header}}
<div class="login-container">
    <h3 class="text-center mb-4">로그인</h3>

    <form action="/login" method="post" id = "loginForm">
        <div class="mb-3">
            <label for="id" class="form-label">아이디</label>
            <input type="text" id="id" name="id" class="form-control" required>
        </div>

        <div class="mb-3">
            <label for="password" class="form-label">비밀번호</label>
            <input type="password" id="password" name="password" class="form-control" required>
        </div>

        {{#error}}
            <div class="alert alert-danger text-center py-2">{{error}}</div>
        {{/error}}

        <button type="submit" class="btn btn-primary w-100">로그인</button>
        <a href="/login/addUser" class="btn btn-primary">회원가입</a>
    </form>
</div>
<script>
    // ✅ [추가된 로직] 페이지 로드 시 로그인 상태 유지 확인
    const existingToken = localStorage.getItem("jwtToken");

    if (existingToken) {
        // 실제로는 서버에 토큰 유효성 검사를 요청해야 합니다.
        // 여기서는 간단하게 토큰이 존재하면 로그인 상태로 간주하고 리디렉션합니다.
        console.log("로컬 스토리지에 JWT 토큰이 존재합니다. 로그인 상태를 유지합니다.");
        alert("로그인 상태가 유지됩니다. 메인 페이지로 이동합니다.");

        // 메인 페이지(혹은 토큰이 필요한 다른 페이지)로 이동
        window.location.href = "/articles";

        // 토큰이 있으므로 폼 제출 로직은 무시됩니다.
    } else {
        console.log("로컬 스토리지에 JWT 토큰이 없습니다. 로그인이 필요합니다.");
    }

    document.getElementById("loginForm").addEventListener("submit", async (e) => {
      e.preventDefault();

     const response = await fetch("/login", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                id: document.getElementById("id").value,
                password: document.getElementById("password").value
            })
        });

        if (response.ok) { // ⭐️ response.ok가 true일 때만 (HTTP 200번대)
            const token = await response.text();
            console.log("JWT 토큰:", token);

            localStorage.setItem("jwtToken", token);
            alert("로그인 성공! 토큰이 localStorage에 저장되었습니다.");
            window.location.href = "/articles"; // 성공 시 리디렉션 추가

        } else { // ⭐️ response.ok가 false일 때 (HTTP 401 등)
            // 서버에서 보낸 에러 메시지를 얻으려면 다시 response.text()를 사용
            const errorMessage = await response.text();
            alert("로그인 실패! : " + errorMessage);
        }
    });
</script>
{{>layouts/footer}}
